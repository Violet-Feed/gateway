// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/im.proto

package violet.gateway.common.proto_gen.im;

/**
 * Protobuf type {@code im.MarkReadRequest}
 */
public  final class MarkReadRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:im.MarkReadRequest)
    MarkReadRequestOrBuilder {
  // Use MarkReadRequest.newBuilder() to construct.
  private MarkReadRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private MarkReadRequest() {
    userId_ = 0L;
    conShortId_ = 0L;
    readConIndex_ = 0L;
    readBadgeCount_ = 0L;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private MarkReadRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            userId_ = input.readInt64();
            break;
          }
          case 16: {

            conShortId_ = input.readInt64();
            break;
          }
          case 24: {

            readConIndex_ = input.readInt64();
            break;
          }
          case 32: {

            readBadgeCount_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return violet.gateway.common.proto_gen.im.Im.internal_static_im_MarkReadRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return violet.gateway.common.proto_gen.im.Im.internal_static_im_MarkReadRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            violet.gateway.common.proto_gen.im.MarkReadRequest.class, violet.gateway.common.proto_gen.im.MarkReadRequest.Builder.class);
  }

  public static final int USER_ID_FIELD_NUMBER = 1;
  private long userId_;
  /**
   * <code>int64 user_id = 1;</code>
   */
  public long getUserId() {
    return userId_;
  }

  public static final int CON_SHORT_ID_FIELD_NUMBER = 2;
  private long conShortId_;
  /**
   * <code>int64 con_short_id = 2;</code>
   */
  public long getConShortId() {
    return conShortId_;
  }

  public static final int READ_CON_INDEX_FIELD_NUMBER = 3;
  private long readConIndex_;
  /**
   * <code>int64 read_con_index = 3;</code>
   */
  public long getReadConIndex() {
    return readConIndex_;
  }

  public static final int READ_BADGE_COUNT_FIELD_NUMBER = 4;
  private long readBadgeCount_;
  /**
   * <code>int64 read_badge_count = 4;</code>
   */
  public long getReadBadgeCount() {
    return readBadgeCount_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (userId_ != 0L) {
      output.writeInt64(1, userId_);
    }
    if (conShortId_ != 0L) {
      output.writeInt64(2, conShortId_);
    }
    if (readConIndex_ != 0L) {
      output.writeInt64(3, readConIndex_);
    }
    if (readBadgeCount_ != 0L) {
      output.writeInt64(4, readBadgeCount_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (userId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, userId_);
    }
    if (conShortId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, conShortId_);
    }
    if (readConIndex_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, readConIndex_);
    }
    if (readBadgeCount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, readBadgeCount_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof violet.gateway.common.proto_gen.im.MarkReadRequest)) {
      return super.equals(obj);
    }
    violet.gateway.common.proto_gen.im.MarkReadRequest other = (violet.gateway.common.proto_gen.im.MarkReadRequest) obj;

    boolean result = true;
    result = result && (getUserId()
        == other.getUserId());
    result = result && (getConShortId()
        == other.getConShortId());
    result = result && (getReadConIndex()
        == other.getReadConIndex());
    result = result && (getReadBadgeCount()
        == other.getReadBadgeCount());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + USER_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getUserId());
    hash = (37 * hash) + CON_SHORT_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getConShortId());
    hash = (37 * hash) + READ_CON_INDEX_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getReadConIndex());
    hash = (37 * hash) + READ_BADGE_COUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getReadBadgeCount());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static violet.gateway.common.proto_gen.im.MarkReadRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(violet.gateway.common.proto_gen.im.MarkReadRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code im.MarkReadRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:im.MarkReadRequest)
      violet.gateway.common.proto_gen.im.MarkReadRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return violet.gateway.common.proto_gen.im.Im.internal_static_im_MarkReadRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return violet.gateway.common.proto_gen.im.Im.internal_static_im_MarkReadRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              violet.gateway.common.proto_gen.im.MarkReadRequest.class, violet.gateway.common.proto_gen.im.MarkReadRequest.Builder.class);
    }

    // Construct using violet.gateway.common.proto_gen.im.MarkReadRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      userId_ = 0L;

      conShortId_ = 0L;

      readConIndex_ = 0L;

      readBadgeCount_ = 0L;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return violet.gateway.common.proto_gen.im.Im.internal_static_im_MarkReadRequest_descriptor;
    }

    public violet.gateway.common.proto_gen.im.MarkReadRequest getDefaultInstanceForType() {
      return violet.gateway.common.proto_gen.im.MarkReadRequest.getDefaultInstance();
    }

    public violet.gateway.common.proto_gen.im.MarkReadRequest build() {
      violet.gateway.common.proto_gen.im.MarkReadRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public violet.gateway.common.proto_gen.im.MarkReadRequest buildPartial() {
      violet.gateway.common.proto_gen.im.MarkReadRequest result = new violet.gateway.common.proto_gen.im.MarkReadRequest(this);
      result.userId_ = userId_;
      result.conShortId_ = conShortId_;
      result.readConIndex_ = readConIndex_;
      result.readBadgeCount_ = readBadgeCount_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof violet.gateway.common.proto_gen.im.MarkReadRequest) {
        return mergeFrom((violet.gateway.common.proto_gen.im.MarkReadRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(violet.gateway.common.proto_gen.im.MarkReadRequest other) {
      if (other == violet.gateway.common.proto_gen.im.MarkReadRequest.getDefaultInstance()) return this;
      if (other.getUserId() != 0L) {
        setUserId(other.getUserId());
      }
      if (other.getConShortId() != 0L) {
        setConShortId(other.getConShortId());
      }
      if (other.getReadConIndex() != 0L) {
        setReadConIndex(other.getReadConIndex());
      }
      if (other.getReadBadgeCount() != 0L) {
        setReadBadgeCount(other.getReadBadgeCount());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      violet.gateway.common.proto_gen.im.MarkReadRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (violet.gateway.common.proto_gen.im.MarkReadRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long userId_ ;
    /**
     * <code>int64 user_id = 1;</code>
     */
    public long getUserId() {
      return userId_;
    }
    /**
     * <code>int64 user_id = 1;</code>
     */
    public Builder setUserId(long value) {
      
      userId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 user_id = 1;</code>
     */
    public Builder clearUserId() {
      
      userId_ = 0L;
      onChanged();
      return this;
    }

    private long conShortId_ ;
    /**
     * <code>int64 con_short_id = 2;</code>
     */
    public long getConShortId() {
      return conShortId_;
    }
    /**
     * <code>int64 con_short_id = 2;</code>
     */
    public Builder setConShortId(long value) {
      
      conShortId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 con_short_id = 2;</code>
     */
    public Builder clearConShortId() {
      
      conShortId_ = 0L;
      onChanged();
      return this;
    }

    private long readConIndex_ ;
    /**
     * <code>int64 read_con_index = 3;</code>
     */
    public long getReadConIndex() {
      return readConIndex_;
    }
    /**
     * <code>int64 read_con_index = 3;</code>
     */
    public Builder setReadConIndex(long value) {
      
      readConIndex_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 read_con_index = 3;</code>
     */
    public Builder clearReadConIndex() {
      
      readConIndex_ = 0L;
      onChanged();
      return this;
    }

    private long readBadgeCount_ ;
    /**
     * <code>int64 read_badge_count = 4;</code>
     */
    public long getReadBadgeCount() {
      return readBadgeCount_;
    }
    /**
     * <code>int64 read_badge_count = 4;</code>
     */
    public Builder setReadBadgeCount(long value) {
      
      readBadgeCount_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 read_badge_count = 4;</code>
     */
    public Builder clearReadBadgeCount() {
      
      readBadgeCount_ = 0L;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:im.MarkReadRequest)
  }

  // @@protoc_insertion_point(class_scope:im.MarkReadRequest)
  private static final violet.gateway.common.proto_gen.im.MarkReadRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new violet.gateway.common.proto_gen.im.MarkReadRequest();
  }

  public static violet.gateway.common.proto_gen.im.MarkReadRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<MarkReadRequest>
      PARSER = new com.google.protobuf.AbstractParser<MarkReadRequest>() {
    public MarkReadRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new MarkReadRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<MarkReadRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<MarkReadRequest> getParserForType() {
    return PARSER;
  }

  public violet.gateway.common.proto_gen.im.MarkReadRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

